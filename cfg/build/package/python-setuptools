#!/bin/sh

source script.lib.sh

source ../script/postbuild-python.sh


PackageBuildDependencies()
{
	printf 'python';
}


PackageRuntimeDependencies()
{
	return 0;
}


PackageWarnings()
{
	printf 'not sure if the env var SETUPTOOLS_INSTALL_WINDOWS_SPECIFIC_FILES really needs to be set. And if does, maybe we can just pass it to the function call, instead of exporting it';
}


PackagePostBuild()
{	
	local prefix="$1";
	local destDir="$2";
	local binDir="$3";
	local envVarsFile="$4";

	PostBuildPython \
		'python-setuptools' \
		"$prefix" \
		"$destDir" \
		"$binDir" \
		"$envVarsFile";
}


PackageBuild()
{
	local buildDir="$1";
	local prefix="$2";
	local destDir="$3";
	local npp="$4";
	local dirBin="$5";

	local package='python-setuptools';

	# NOTE: last time I tried using the release from the github repo
	# (pypa/setuptools) it was badly broken and failed during the install,
	# complaining about being unable to copy a directory named 
	# "build/scripts-3.10" because it did not exist. Feel free to give it 
	# another try if you wish.
	local sourceDir;	
	sourceDir=$(./latest.sh \
		--host='pypi' \
		--package="setuptools" \
		-b="$buildDir");
	
	if [ $? -ne 0  ] || [ -z "$sourceDir" ]; then
		Die "unable to retrieve the latest version tar";
	fi

	SETUPTOOLS_INSTALL_WINDOWS_SPECIFIC_FILES=0;
	export SETUPTOOLS_INSTALL_WINDOWS_SPECIFIC_FILES;
	
	DieIfFails cd "$sourceDir";

	LogErr 'building...'
	DieIfFails python setup.py build \
		-j $npp;
		
	LogErr 'installing...'
	
	DieIfFails python setup.py install \
		--prefix=$prefix \
		--optimize=2 \
		--root="$destDir" \
		--skip-build

	unset SETUPTOOLS_INSTALL_WINDOWS_SPECIFIC_FILES;
}
