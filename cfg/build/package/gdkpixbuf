#!/bin/sh

. ../script/lib.sh



PackageBuildDependencies()
{
	printf '
glib
libpng
libjpeg-turbo
meson
ninja
sharedmimeinfo
';
}


PackageRuntimeDependencies()
{
	return 0;
}


PackageWarnings()
{
	return 0;
}


PackageBuild()
{
	local buildDir="$1";
	local prefix="$2";
	local destDir="$3";
	#local npp="$4";
	local dirBin="$5";
	local dirRoot="$6";
	
	local package='gdk-pixbuf';

	local sourceDir;
	sourceDir=$(./latest.sh \
		--package="$package" \
		--host='gnome' \
		-b="$buildDir"
		);

	if [ $? -ne 0  ] || [ -z "$sourceDir" ]; then
		Die "unable to retrieve the latest version tar";
	fi
	
	DieIfFails ./make.sh \
		-b="$buildDir" \
		-s="$sourceDir" \
		--cmd-configure='meson' \
		--configure-options="\
			--prefix=$prefix \
			--default-library=both \
			-D buildtype=release \
			-D b_lto=true \
			-D builtin_loaders=png,jpeg \
			-D docs=false \
			-D gtk_doc=false \
			-D installed_tests=false \
			-D introspection=disabled \
			-D man=false \
			-D tests=false \
			" \
		--cmd-build='meson compile' \
		--dest-dir="$destDir" \
		--cmd-install='meson' \
		--install-options="install";

	local pkgconfigDir="$dirBin/pkgconfig";

	DieIfFails ./adjust-pkgconfig.sh \
		-d="$destDir" \
		--prefix="$prefix" \
		-o="$pkgconfigDir" \
		-r="$dirRoot";

}


PackagePostBuild()
{	
	local prefix="$1";
	local destDir="$2";
	local binDir="$3";
	local envVarsFile="$4";
	local rootDir="$5";

	# ensure gdkpixbuf will search for modules in our fake root
	if EnvAddPackage "$envVarsFile" 'gdkpixbuf'; then
		local dir="$(
			find "${rootDir}${prefix}/lib/gdk-pixbuf-"*/*/loaders -type d |
			sort -Vr |
			head -n 1
			)";

		if [ -z "$dir" ]; then
			Die 'unable to locate the gdk-pixbuf module directory';			
		fi
			
		EnvPathPrepend "$envVarsFile" "GDK_PIXBUF_MODULEDIR" "$dir";
	fi
}
