#!/bin/sh

. ../script/lib.sh



PackageBuildDependencies()
{
	printf '
bison
elfutils
flex
glslang
libdrm
libvdpau
llvm-dev
libxext
libxfixes
libxshmfence
libxxf86vm
meson
ninja
python-mako
python-markupsafe
python-pygments
xrandr
';
}


PackageRuntimeDependencies()
{
	return 0;
}


PackageWarnings()
{
	printf 'mesa 22.0.2 cannot be built with "forced" LTO. But it seems we can use -Db_lto and then lto will only be disabled where it breaks stuff (see meson.build, search for gcc_lto_quirk).\ndefault_library=static (or "both") does not generate static libraries. Not even using LDFLAGS=-static (or via c_link_args and cpp_link_args). We are having to manually modify the meson.build file';
}


PackageBuild()
{
	local buildDir="$1";
	local prefix="$2";
	local destDir="$3";
	local npp="$4";
	local dirBin="$5";
	local dirRoot="$6";

	local package='mesa';

	local sourceDir;	
	sourceDir=$(./latest.sh \
		--url='https://archive.mesa3d.org' \
		--package="$package" \
		-b="$buildDir");
	
	if [ $? -ne 0  ] || [ -z "$sourceDir" ]; then
		Die "unable to retrieve the latest version tar";
	fi

	DieIfFails ./patch.sh "$package" "$sourceDir";

	CC=cc-no.lto DieIfFails ./make.sh \
		-b="$buildDir" \
		-s="$sourceDir" \
		-j="$npp" \
		--cmd-configure='meson' \
		--configure-options="\
			--prefix=$prefix \
			--buildtype=release \
			-D b_colorout=auto \
			-D b_lto=true \
			-D b_ndebug=true \
			-D cpp_rtti=false \
			-D gles1=disabled \
			-D platforms=x11 \
			-D strip=true \
			-D valgrind=disabled \
			" \
		--cmd-build='ninja' \
		--cmd-install='meson' \
		--install-options="install --destdir=$destDir";

	DieIfFails ./adjust-pkgconfig.sh \
		-d="$destDir" \
		--prefix="$prefix" \
		-o="${dirBin}/pkgconfig" \
		-r="$dirRoot";
}
