# adds the macro $timestamp
--- fteqw-code-r6257-trunk/engine/common/cmd.c
+++ ferneu/engine/common/cmd.c
@@ -4344,20 +4344,33 @@
 {
 	return "\"";
 }
 
 static char *Macro_Random(void)
 {
 	Q_snprintfz(macro_buf, sizeof(macro_buf), "%u", rand());
 	return macro_buf;
 }
 
+static char *Macro_Timestamp (void)
+{
+	time_t		t;
+	struct tm	*ptm;
+
+	time (&t);
+	ptm = localtime (&t);
+	if (!ptm)
+		return "#bad date#";
+	strftime (macro_buf, sizeof(macro_buf)-1, "%Y%m%d_%H%M%S", ptm);
+	return macro_buf;
+}
+
 /*
 ============
 Cmd_Init
 ============
 */
 void Cmd_Init (void)
 {
 	macro_count = 0;	
 //
 // register our commands
@@ -4414,20 +4427,21 @@
 	Cmd_AddCommandD ("find", Cmd_Apropos_f, "Lists all cvars or commands with the specified substring somewhere in their name or descrition.");
 
 	Cmd_AddMacro("random", Macro_Random, true);
 	Cmd_AddMacro("time", Macro_Time, true);
 	Cmd_AddMacro("ukdate", Macro_UKDate, false);
 	Cmd_AddMacro("usdate", Macro_USDate, false);
 	Cmd_AddMacro("date", Macro_ProperDate, false);
 	Cmd_AddMacro("version", Macro_Version, false);
 	Cmd_AddMacro("qt", Macro_Quote, false);
 	Cmd_AddMacro("dedicated", Macro_Dedicated, false);
+	Cmd_AddMacro("timestamp", Macro_Timestamp, false);
 
 #ifdef HAVE_CLIENT
 	Cvar_Register(&tp_disputablemacros, "Teamplay");
 #endif
 
 	Cvar_Register(&ruleset_allow_in, "Console");
 	Cmd_AddCommandD ("in", Cmd_In_f, "Issues the given command after a time delay. Disabled if ruleset_allow_in is 0.");
 
 #ifdef HAVE_LEGACY
 	Cmd_AddCommandD ("defer", Cmd_In_f, "Issues the given command after a time delay. Disabled if ruleset_allow_in is 0.");
